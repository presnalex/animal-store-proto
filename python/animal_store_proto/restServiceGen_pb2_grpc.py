# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from animal_store_proto import animal_pb2 as animal__store__proto_dot_animal__pb2


class AnimalStoreServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAnimal = channel.unary_unary(
        '/animal_store_proto.AnimalStoreService/GetAnimal',
        request_serializer=animal__store__proto_dot_animal__pb2.AnimalReq.SerializeToString,
        response_deserializer=animal__store__proto_dot_animal__pb2.AnimalRsp.FromString,
        )


class AnimalStoreServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetAnimal(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AnimalStoreServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAnimal': grpc.unary_unary_rpc_method_handler(
          servicer.GetAnimal,
          request_deserializer=animal__store__proto_dot_animal__pb2.AnimalReq.FromString,
          response_serializer=animal__store__proto_dot_animal__pb2.AnimalRsp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'animal_store_proto.AnimalStoreService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
